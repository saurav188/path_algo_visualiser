{"version":3,"sources":["components/maze.js","algorithms/A_star.js","algorithms/BFS.js","algorithms/dijskra.js","algorithms/Genetic_algorithm.js","components/maze_controls.js","user mannual  images/choose_mutation_rate.PNG","user mannual  images/choose_population.PNG","user_manual_components/GA_options.js","user mannual  images/choose_builder.PNG","user mannual  images/maze_build1.PNG","user mannual  images/maze_build2.PNG","user_manual_components/maze_builder.js","user mannual  images/choose_eraser.PNG","user mannual  images/earser1.PNG","user mannual  images/earser2.PNG","user mannual  images/earser3.PNG","user_manual_components/maze_eraser.js","user mannual  images/choose_generate_maze.PNG","user_manual_components/maze_generator.js","user mannual  images/mobile/choose_more.PNG","user mannual  images/mobile/options_open.PNG","user_manual_components/more_options.js","user mannual  images/choose_algorithm.PNG","user_manual_components/select_algorithm.js","user mannual  images/choose_start.PNG","user mannual  images/build_start.PNG","user_manual_components/select_start.js","user mannual  images/Choose_target.PNG","user mannual  images/build_target.PNG","user_manual_components/select_target.js","user mannual  images/choose_stop.PNG","user_manual_components/start_stop_algo.js","components/user_manual.js","App.js","reportWebVitals.js","index.js"],"names":["Maze","props","maze_width","width","maze_height","height","no_rows","rows","no_columns","columns","only_click","Array","fill","clicked","change_clicked","useState","build_maze","event","document","getElementById","checked","target","classList","add","contains","remove","from","getElementsByClassName","forEach","each","useEffect","grids","querySelectorAll","length","_jsx","className","style","maxWidth","minWidth","maxHeight","minHeight","children","map","onClick","onMouseOver","A_star","x","y","found_start","found_target","i","grid","Math","floor","push","alert","get_heuristic","current","dist","abs","start","open","visited","j","k","active_grids","parent","neighbours","winner","temp","intervalId","setInterval","innerHTML","clearInterval","splice","index","undefined","get_neighbours","neighbour","BFS","queue","pop","dijsktra","min","z","keep_looping","genetic_algorithm","path","constructor","temp_path","temp_visited","temp_neighbours","temp_next","getRndInteger","temp_fitness","this","fitness","population","value","mutation_rate","current_generation","genetic_algorithm_interval","refresh","max_fitness_index","total_fitness","max_fitness","max_fitness_path","prob","Infinity","display","temp_generation","mutate","crossover2","get_parent_according_to_prob","max","random","get_fitness","parent1","parent2","parent1_reaches_target","parent2_reaches_target","parent1_visited","parent2_visited","resulting_path","path1","path2","crossover_complete","concat","slice","temp_child","child","random_index","keep_original","target_reacher","temp_target","Maze_control","get_next","no_neighbours","ceil","maze_generator","e","stack","intervarId","next","stop_refresh","set_countinue_serching","continue_seaching","_jsxs","class","id","algo_choosing_div","querySelector","genetic_algo_options","show_btn","show_more_options","for","type","algo","dijkstra","find_path","GA_options","src","choose_mutation_rate","choose_population","Maze_builder","choose_builder","maze_build1","maze_build2","Maze_eraser","choose_eraser","eraser1","eraser2","eraser3","Maze_generator","choose_generate_maze","More_options","choose_more","optioons_open","Select_algorithm","choose_algorithm","Select_start","choose_start","build_start","Select_target","choose_target","build_target","Start_stop_algo","choose_stop","User_manual","skip","to_show_index","all_manuals","window","innerWidth","App","innerHeight","title","User_Mannual","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode"],"mappings":"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","file":"static/js/main.a0e651cc.chunk.js","sourcesContent":["import '../css/maze.css'\nimport React, { useState,useEffect } from 'react';\n\n//Component: maze\n//\n//includes:\n//  onbstacles building function\n//  actual maze\n\nfunction Maze(props) {\n    var maze_width=props.width;\n    var maze_height=props.height;\n    var no_rows=props.rows;\n    var no_columns=props.columns;\n    var only_click=false;\n    var rows=new Array(no_rows).fill(true);\n    var columns=new Array(no_columns).fill(true);\n    const [clicked,change_clicked]=useState(false);\n    function check_for_obstacle_in_target(){\n        var target=Array.from(document.getElementsByClassName(\"target\"))[0];\n        target.classList.remove(\"obstacle\");\n    }\n    //obstacle_building_function\n    function build_maze(event){\n        if(document.getElementById('drawer').checked === true){\n            event.target.classList.add('obstacle')\n        }else if(document.getElementById('eraser').checked === true){\n            if(event.target.classList.contains('obstacle')){\n                event.target.classList.remove('obstacle')\n            };\n        }else if(document.getElementById('start').checked === true && only_click==true){\n            const grids=Array.from(document.getElementsByClassName('grid'));\n            grids.forEach(each=>{\n                if(each.classList.contains('start')){\n                    each.classList.remove('start');\n                };\n            });\n            event.target.classList.add('start');\n        }else if(document.getElementById('target').checked === true && only_click==true){\n            const grids=Array.from(document.getElementsByClassName('grid'));\n            grids.forEach(each=>{\n                if(each.classList.contains('target')){\n                    each.classList.remove('target');\n                };\n            });\n            event.target.classList.add('target');\n        };\n        only_click=false;\n        check_for_obstacle_in_target();\n    };\n    //adding start and target grid at the beginning\n    useEffect(()=>{\n            const grids=Array.from(document.querySelectorAll(\".grid\"));\n            grids[0].classList.add(\"start\");\n            grids[grids.length-1].classList.add(\"target\");\n    },[]);\n    \n    return (\n        <div className=\"maze\" style={{\n            maxWidth:{maze_width}+\"px\",\n            minWidth:{maze_width}+\"px\",\n            maxHeight:{maze_height}+\"px\",\n            minHeight:{maze_height}+\"px\"\n        }}>\n           {rows.map(()=>\n                <div className=\"maze_row\">\n                    {columns.map(()=>\n                        <div className='grid' \n                            onClick={event=>{change_clicked(!clicked);only_click=true;build_maze(event);}} \n                            onMouseOver={event=>{if(clicked){build_maze(event)}}}>\n                        </div>\n\n                    )}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Maze;\n","// A* path finding algorithm \n\nfunction A_star(no_rows,no_columns){\n    const grids=Array.from(document.getElementsByClassName('grid'));\n    var x,y;\n    var found_start=false;\n    var target=[]\n    var found_target=false;\n    var i=0;\n    // find target and start cooridinates\n    grids.forEach(grid=>{\n        if(grid.classList.contains('start')){\n            y=Math.floor(i/no_columns)+1;\n            x=(i%no_columns)+1;\n            found_start=true;\n        }else if(grid.classList.contains('target')){\n            target.push((i%no_columns)+1);\n            target.push(Math.floor(i/no_columns)+1);\n            found_target=true;\n        };\n        i++;\n    });\n    if(!found_start || !found_target){\n        alert('choose target and start grid');\n        return\n    };\n    //get all available neighbours of the given grid(x,y)\n    function get_neighbours(x,y,visited){\n        var neighbours=[];\n        var index=((y-1)*no_columns)+(x-1)\n        //top neighbour\n        if(y-1>0 && !grids[index-no_columns].classList.contains('obstacle') && visited[x+','+(y-1)]===undefined){\n            neighbours.push([x,(y-1)])\n        };\n        //right neighbour\n        if(x+1<=no_columns && !grids[index+1].classList.contains('obstacle') && visited[(x+1)+','+y]===undefined){\n            neighbours.push([(x+1),y])\n        };\n        //bottom neighbour\n        if(y+1<=no_rows && !grids[index+no_columns].classList.contains('obstacle') && visited[x+','+(y+1)]===undefined){\n            neighbours.push([x,(y+1)])\n        };\n        //left neighbour\n        if(x-1>0 && !grids[index-1].classList.contains('obstacle') && visited[(x-1)+','+y]===undefined){\n            neighbours.push([(x-1),y])\n        };\n        return neighbours;\n    };\n    // heuristic function for current\n    function get_heuristic(current,target){\n        return  dist[current[0]+','+current[1]]+(Math.abs(target[0]-current[0]))+(Math.abs(target[1]-current[1]));\n    };\n    found_target=false;\n    var start=[x,y]\n    var open=[[x,y]];\n    var visited={};\n    var j=1;\n    var k=1;\n    var active_grids=[];\n    //puts all the active grid to the array gids\n    grids.forEach(grid=>{\n        if(!grid.classList.contains('obstacle')){\n            active_grids.push([j,k]);\n        };\n        if(j===no_columns){\n            k++;\n            j=1;\n        }else{\n            j++;\n        };\n    });\n    let dist={};\n    let parent={}\n    //dist from start of all the grids is infinity \n    active_grids.forEach(each=>{\n        dist[each[0]+','+each[1]]=999999;\n    });\n    //dist of start from start is 0\n    dist[x+','+y]=0;\n    var neighbours,winner,current,temp;\n    i=1;\n    var intervalId=null;\n    intervalId=setInterval(()=>{\n        if(document.getElementById(\"maze_control_varaible_continue_searching\").innerHTML==\"false\"){\n            //stop the algorithm from running\n            clearInterval(intervalId);\n            return;\n        };\n        if(open.length<=0||found_target){clearInterval(intervalId);}\n        if(!found_target){\n            winner=0;\n            // chooses a winner with the least heuristic\n            for(var i=0;i<open.length;i++){\n                if(get_heuristic(open[i],target)<get_heuristic(open[winner],target)){\n                    winner=i;\n                };\n            };\n            current=open[winner];\n            //if cuurent is the target stop \n            if(current[0]===target[0] && current[1]==target[1]){\n                found_target=true;\n                x=current[0];\n                y=current[1];\n                return\n            };\n            //remove current from open array\n            open.splice(winner,1);\n            visited[current[0]+','+current[1]]=true;\n            neighbours=get_neighbours(current[0],current[1],visited);\n            neighbours.forEach(neighbour=>{\n                //finds if neighbour is reached yet \n                if(dist[current[0]+','+current[1]]+1<dist[neighbour[0]+','+neighbour[1]]){//this distance < Infinity if not visited\n                    //add nearest parent to neibour and new distance \n                    dist[neighbour[0]+','+neighbour[1]]=dist[current[0]+','+current[1]]+1;\n                    parent[neighbour[0]+','+neighbour[1]]=[current[0],current[1]];\n                    if(!(neighbour in open)){\n                        //add neighbout to open if its not in it yet\n                        open.push(neighbour)\n                    };\n                    //showt the grid as seen if the grid is not the start or the target\n                    if(!grids[((neighbour[1]-1)*no_columns)+(neighbour[0]-1)].classList.contains('start')\n                        && !grids[((neighbour[1]-1)*no_columns)+(neighbour[0]-1)].classList.contains('target')){\n                            grids[((neighbour[1]-1)*no_columns)+(neighbour[0]-1)].classList.add('seen');\n                    };\n                };\n            });\n        }else{\n            //display the final path found\n            while(!(x===start[0] && y===start[1])){\n            if(!grids[((y-1)*no_columns)+(x-1)].classList.contains('start') && \n                !grids[((y-1)*no_columns)+(x-1)].classList.contains('target')){\n                    grids[((y-1)*no_columns)+(x-1)].classList.add('path');\n            };\n            temp=parent[x+','+y];\n            x=temp[0];\n            y=temp[1];\n        };\n        }\n    },25);\n};\n\nexport default A_star;","export default function BFS(no_rows,no_columns){\n    const grids=Array.from(document.getElementsByClassName('grid'));\n    var x,y;\n    var found_start=false;\n    var target=[]\n    var found_target=false;\n    var i=0;\n    //finds start and target grid\n    grids.forEach(grid=>{\n        if(grid.classList.contains('start')){\n            y=Math.floor(i/no_columns)+1;\n            x=(i%no_columns)+1;\n            found_start=true;\n        }else if(grid.classList.contains('target')){\n            target.push((i%no_columns)+1);\n            target.push(Math.floor(i/no_columns)+1);\n            found_target=true;\n        };\n        i++;\n    });\n    //checks if start and target grid is selected\n    if(!found_start || !found_target){\n        alert('choose target and start grid');\n        return\n    };\n    //gets all the non active ,non visited neighbours\n    function get_neighbours(x,y,visited){\n        var neighbours=[];\n        var index=((y-1)*no_columns)+(x-1);\n        visited[x+','+y]=true;\n        //top neighbour\n        if(y-1>0 && !grids[index-no_columns].classList.contains('obstacle') && visited[x+','+(y-1)]===undefined){\n            neighbours.push([x,(y-1)]);\n            visited[x+','+(y-1)]=true;\n        };\n        //right neighbour\n        if(x+1<=no_columns && !grids[index+1].classList.contains('obstacle') && visited[(x+1)+','+y]===undefined){\n            neighbours.push([(x+1),y]);\n            visited[(x+1)+','+y]=true;\n        };\n        //bottom neighbour\n        if(y+1<=no_rows && !grids[index+no_columns].classList.contains('obstacle') && visited[x+','+(y+1)]===undefined){\n            neighbours.push([x,(y+1)]);\n            visited[x+','+(y+1)]=true;\n        };\n        //left neighbour\n        if(x-1>0 && !grids[index-1].classList.contains('obstacle') && visited[(x-1)+','+y]===undefined){\n            neighbours.push([(x-1),y]);\n            visited[(x-1)+','+y]=true;\n        };\n        return neighbours;\n    };\n    var start=[x,y]\n    found_target=false;\n    var visited={};\n    var parent={};\n    var temp,neighbours;\n    var queue=[[x,y]];\n    var intervalId=null;\n    intervalId=setInterval(()=>{\n        if(document.getElementById(\"maze_control_varaible_continue_searching\").innerHTML==\"false\"){\n            //stop the algorithms when stop btn is clicked\n            clearInterval(intervalId);\n            return;\n        };\n        if(queue.length<=0 || found_target){clearInterval(intervalId);};\n        if(x===target[0] && y===target[1]){found_target=true;};\n        if(!found_target){//continue until target is found do this\n            //dequeue from the queue\n            temp=queue.pop();\n            x=temp[0];\n            y=temp[1];\n            neighbours=get_neighbours(x,y,visited);\n            //add nearest parent to the neighbour and add it to the queue\n            neighbours.forEach(neighbour=>{\n                queue.splice(0,0,neighbour);\n                parent[neighbour[0]+','+neighbour[1]]=[x,y]\n            });\n            //show the grid as seen if the grid is not the start or the target\n            if(!grids[((y-1)*no_columns)+(x-1)].classList.contains('start')\n                && !grids[((y-1)*no_columns)+(x-1)].classList.contains('target')){\n                grids[((y-1)*no_columns)+(x-1)].classList.add('seen');\n            };\n        }else{// do this if target is found\n            while(!(x===start[0] && y===start[1])){\n                if(!grids[((y-1)*no_columns)+(x-1)].classList.contains('start') && \n                    !grids[((y-1)*no_columns)+(x-1)].classList.contains('target')){\n                        grids[((y-1)*no_columns)+(x-1)].classList.add('path');\n                };\n                temp=parent[x+','+y];\n                x=temp[0];\n                y=temp[1];\n            };\n        };\n    },25);\n};","export default function dijsktra(no_rows,no_columns){\n    const grids=Array.from(document.getElementsByClassName('grid'));\n    let x,y;\n    var found_start=false;\n    let target=[]\n    var found_target=false;\n    var i=0;\n    //finds start and target grid\n    grids.forEach(grid=>{\n        if(grid.classList.contains('start')){\n            y=Math.floor(i/no_columns)+1;\n            x=(i%no_columns)+1;\n            found_start=true;\n        }else if(grid.classList.contains('target')){\n            target.push((i%no_columns)+1);\n            target.push(Math.floor(i/no_columns)+1);\n            found_target=true;\n        };\n        i++;\n    });\n    //checks if start and target grid is selected\n    if(!found_start || !found_target){\n        alert('choose target and start grid');\n        return\n    };\n    //gets all the non active ,non visited neighbours\n    //gets all the non active ,non visited neighbours\n    function get_neighbours(x,y){\n        var neighbours=[];\n        var index=((y-1)*no_columns)+(x-1);\n        //top neighbour\n        if(y-1>0 && !grids[index-no_columns].classList.contains('obstacle')){\n            neighbours.push([x,(y-1)]);\n        };\n        //right neighbour\n        if(x+1<=no_columns && !grids[index+1].classList.contains('obstacle')){\n            neighbours.push([(x+1),y]);\n        };\n        //bottom neighbour\n        if(y+1<=no_rows && !grids[index+no_columns].classList.contains('obstacle')){\n            neighbours.push([x,(y+1)]);\n        };\n        //left neighbour\n        if(x-1>0 && !grids[index-1].classList.contains('obstacle')){\n            neighbours.push([(x-1),y]);\n        };\n        return neighbours;\n    };\n    var j=1;\n    var k=1;\n    var active_grids=[]\n    //puts all the active grid to the array gids\n    grids.forEach(grid=>{\n        if(!grid.classList.contains('obstacle')){\n            active_grids.push([j,k]);\n        };\n        if(j===no_columns){\n            k++;\n            j=1;\n        }else{\n            j++;\n        };\n    });\n    let dist={};\n    //dist from start of all the grids is infinity \n    active_grids.forEach(each=>{\n        dist[each[0]+','+each[1]]=999999;\n    });\n    //dist of start from start is 0\n    dist[x+','+y]=0;\n    var start=[x,y]\n    var parent={};\n    let neighbours,min\n    let current,z,temp;\n    var keep_looping=true;\n    var intervalId=null;\n    intervalId=setInterval(()=>{\n        if(document.getElementById(\"maze_control_varaible_continue_searching\").innerHTML==\"false\"){\n            //stops the algorithm if stop btn is clicked\n            clearInterval(intervalId);\n            return;\n        };\n        if(active_grids.length<=0 || !keep_looping){clearInterval(intervalId);}\n        min=99999;\n        for(var i=0;i<active_grids.length;i++){\n            temp=dist[active_grids[i][0]+','+active_grids[i][1]]\n            if(min>temp){\n                min=temp;\n                z=i;\n            };\n        };\n        current=active_grids[z];\n        //removes current form active_grids\n        active_grids.splice(z,1);\n        neighbours=get_neighbours(current[0],current[1]);\n        neighbours.forEach(neighbour=>{\n            //adds best parent to the neighbour\n            if(dist[current[0]+','+current[1]]+1<dist[neighbour[0]+','+neighbour[1]]){\n                dist[neighbour[0]+','+neighbour[1]]=dist[current[0]+','+current[1]]+1;\n                parent[neighbour[0]+','+neighbour[1]]=[current[0],current[1]]\n            }\n            //checks if the the target is reached\n            if(neighbour[0]===target[0] && neighbour[1]===target[1]){\n                x=neighbour[0];\n                y=neighbour[1];\n                keep_looping=false\n            };\n            //shows the grid is visited\n            if(!grids[((neighbour[1]-1)*no_columns)+(neighbour[0]-1)].classList.contains('start')\n                && !grids[((neighbour[1]-1)*no_columns)+(neighbour[0]-1)].classList.contains('target')){\n                    grids[((neighbour[1]-1)*no_columns)+(neighbour[0]-1)].classList.add('seen');\n                    grids[((neighbour[1]-1)*no_columns)+(neighbour[0]-1)].innerHTML=dist[neighbour[0]+\",\"+neighbour[1]]\n            };\n        })\n        if(!keep_looping){//display the final path \n            while(!(x===start[0] && y===start[1])){\n                if(!grids[((y-1)*no_columns)+(x-1)].classList.contains('start') && \n                    !grids[((y-1)*no_columns)+(x-1)].classList.contains('target')){\n                        grids[((y-1)*no_columns)+(x-1)].classList.add('path');\n                };\n                temp=parent[x+','+y];\n                x=temp[0];\n                y=temp[1];\n            };\n        }\n    }, 25);\n};\n","export default function genetic_algorithm(no_rows,no_columns){\n    const grids=Array.from(document.getElementsByClassName('grid'));\n    var x,y;\n    var found_start=false;\n    var target=[]\n    var found_target=false;\n    var i=0;\n    //finds start and target\n    grids.forEach(grid=>{\n        if(grid.classList.contains('start')){\n            y=Math.floor(i/no_columns)+1;\n            x=(i%no_columns)+1;\n            found_start=true;\n        }else if(grid.classList.contains('target')){\n            target.push((i%no_columns)+1);\n            target.push(Math.floor(i/no_columns)+1);\n            found_target=true;\n        };\n        i++;\n    });\n    //checks if start and target is found\n    if(!found_start || !found_target){\n        alert('choose target and start grid');\n        return\n    };\n    //gets all the valid, non-visited neighbours\n    function get_neighbours(x,y,visited){\n        var neighbours=[];\n        var index=((y-1)*no_columns)+(x-1);\n        visited[x+','+y]=true;\n        //top neighbour\n        if(y-1>0 && !grids[index-no_columns].classList.contains('obstacle') && visited[x+','+(y-1)]===undefined){\n            neighbours.push([x,(y-1)]);\n            visited[x+','+(y-1)]=true;\n        };\n        //right neighbour\n        if(x+1<=no_columns && !grids[index+1].classList.contains('obstacle') && visited[(x+1)+','+y]===undefined){\n            neighbours.push([(x+1),y]);\n            visited[(x+1)+','+y]=true;\n        };\n        //bottom neighbour\n        if(y+1<=no_rows && !grids[index+no_columns].classList.contains('obstacle') && visited[x+','+(y+1)]===undefined){\n            neighbours.push([x,(y+1)]);\n            visited[x+','+(y+1)]=true;\n        };\n        //left neighbour\n        if(x-1>0 && !grids[index-1].classList.contains('obstacle') && visited[(x-1)+','+y]===undefined){\n            neighbours.push([(x-1),y]);\n            visited[(x-1)+','+y]=true;\n        };\n        return neighbours;\n    };\n    //random no x => min<=x<max\n    function getRndInteger(min, max) {\n        return Math.floor(Math.random() * (max - min) ) + min;\n    };\n    //removes the current path\n    function refresh(){\n        const grids=Array.from(document.getElementsByClassName('grid'));\n        grids.forEach(each=>{\n            if(each.classList.contains('path')){\n                each.classList.remove('path');\n            };\n        });\n    };\n    //dispalys the given path\n    function display(max_fitness_path){\n        refresh();\n        max_fitness_path.forEach(each=>{\n            if(!grids[((each[1]-1)*no_columns)+(each[0]-1)].classList.contains('start') && \n                !grids[((each[1]-1)*no_columns)+(each[0]-1)].classList.contains('target')){\n                    grids[((each[1]-1)*no_columns)+(each[0]-1)].classList.add('path');\n            };\n        });\n    }\n    //path class\n    class path {\n        //initialpath setup\n        constructor(start,target){\n            var temp_path=[];\n            var temp=start;\n            var temp_visited={};\n            //builds a path\n            while(temp[0]!=target[0] || temp[1]!=target[1]){\n                var temp_neighbours=get_neighbours(temp[0],temp[1],temp_visited);\n                if(temp_neighbours.length===0){break};\n                var temp_next_index=getRndInteger(0,temp_neighbours.length);\n                var temp_next=temp_neighbours[temp_next_index];\n                temp_path.push(temp_next);\n                temp=temp_next;\n            };\n            //adds fitness\n            var temp_fitness=25000;\n            if(temp[0]!==target[0] || temp[1]!==target[1]){temp_fitness=1000}\n            temp_fitness=temp_fitness/(temp_path.length^2);\n            this.path=temp_path;\n            this.fitness=Math.abs(temp_fitness);\n        };\n    };\n    //gets a random parent from the given generation according to probability\n    function get_parent_according_to_prob(current_generation){\n        var i=Math.random()\n        var index=0\n        //if probability of path i is 0.5 then it has 50% chance of chooseing\n        //because if i<0.5 then it is choosen and chance of i<0.5 is 50%\n        while(i>0){\n            i-=current_generation[index].prob;\n            index++;\n        };\n        return current_generation[index-1]\n    };\n    //gives fitness of the path with respect to the target\n    function get_fitness(path,target){\n        var temp_fitness=250000;\n        var temp=path[path.length-1]\n        if(temp[0]!==target[0] || temp[1]!==target[1]){temp_fitness=1000}\n        temp_fitness=temp_fitness/(path.length^2);\n        return Math.abs(temp_fitness);\n    };\n    //does crossover between to path gives a child path of these to path\n    function crossover2(parent1,parent2,start,target){\n        var parent1_visited={};\n        var parent2_visited={};\n        var i=0;\n        var j=0;\n        var resulting_path=[];\n        var path1=parent1.path;\n        var path2=parent2.path;\n        var both_reaches_target,parent1_reaches_target,parent2_reaches_target;\n        var crossover_complete=false;\n        //run the look until both paths grid can be read\n        while(i<path1.length && j<path2.length){\n            //save the index of the grids visited\n            parent1_visited[path1[i][0]+','+path1[i][1]]=i;\n            parent2_visited[path2[j][0]+','+path2[j][1]]=j;\n            //if the current path2 grid is already visited by path1\n            //the path till that grid is small for path1\n            if(parent1_visited[path2[j][0]+','+path2[j][1]]!==undefined){\n                resulting_path=resulting_path.concat(path1.slice(0,parent1_visited[path2[j][0]+','+path2[j][1]]+1));\n                parent1_reaches_target=path1[path1.length-1][0]===target[0] && path1[path1.length-1][1]===target[1];\n                parent2_reaches_target=path2[path2.length-1][0]===target[0] && path2[path2.length-1][1]===target[1];\n                both_reaches_target=parent1_reaches_target && parent2_reaches_target;\n                //if both reaches target \n                if(both_reaches_target){\n                    if((path1.length-parent1_visited[path2[j][0]+','+path2[j][1]])<(path2.length-j)){\n                        resulting_path=resulting_path.concat(path1.slice(parent1_visited[path2[j][0]+','+path2[j][1]]+1,path1.length))\n                    }else{\n                        resulting_path=resulting_path.concat(path2.slice(j+1,path2.length))\n                    }\n                }\n                else if(parent1_reaches_target){\n                    resulting_path=resulting_path.concat(path1.slice(parent1_visited[path2[j][0]+','+path2[j][1]]+1,path1.length))\n                }\n                else if(parent2_reaches_target){\n                    resulting_path=resulting_path.concat(path2.slice(j+1,path2.length))\n                }\n                else{\n                    resulting_path=resulting_path.concat(path2.slice(j+1,path2.length))\n                };\n                crossover_complete=true;\n                break;\n            }\n            else if(parent2_visited[path1[i][0]+','+path1[i][1]]!==undefined){\n                resulting_path=resulting_path.concat(path2.slice(0,parent2_visited[path1[i][0]+','+path1[i][1]]+1));\n                parent1_reaches_target=path1[path1.length-1][0]===target[0] && path1[path1.length-1][1]===target[1];\n                parent2_reaches_target=path2[path2.length-1][0]===target[0] && path2[path2.length-1][1]===target[1];\n                both_reaches_target=parent1_reaches_target && parent2_reaches_target;\n                if(both_reaches_target){\n                    if((path2.length-parent2_visited[path1[i][0]+','+path1[i][1]])<(path1.length-i)){\n                        resulting_path=resulting_path.concat(path2.slice(parent2_visited[path1[i][0]+','+path1[i][1]]+1,path2.length))\n                    }else{\n                        resulting_path=resulting_path.concat(path1.slice(i+1,path1.length))\n                    }\n                }\n                else if(parent2_reaches_target){\n                    resulting_path=resulting_path.concat(path2.slice(parent2_visited[path1[i][0]+','+path1[i][1]]+1,path2.length))\n                }\n                else if(parent1_reaches_target){\n                    resulting_path=resulting_path.concat(path1.slice(i+1,path1.length))\n                }\n                else{\n                    resulting_path=resulting_path.concat(path1.slice(i+1,path1.length))\n                };\n                crossover_complete=true;\n                break;\n            }\n            else if(path1[i][0]===target[0] && path1[i][1]===target[1]){\n                resulting_path=resulting_path.concat(path1.slice(0,i+1));\n                crossover_complete=true;\n                break;\n            }\n            else if(path2[j][0]===target[0] && path2[j][1]===target[1]){\n                resulting_path=resulting_path.concat(path2.slice(0,j+1));\n                crossover_complete=true;\n                break;\n            }\n            else{\n                i+=1;\n                j+=1;\n            };\n        };\n        if(!crossover_complete){\n            resulting_path=path1;\n        }\n        var temp_child=new path(start,target)\n        temp_child.path=resulting_path;\n        temp_child.fitness=get_fitness(resulting_path,target)\n        return temp_child\n    };\n    //mutates the given path\n    function mutate(child,mutation_rate,start,target){\n        var random_no=Math.random();\n        if((random_no*100)-mutation_rate<0){\n            var temp_child=new path(start,target)\n            var temp_path=child.path\n            var random_index=getRndInteger(0,temp_path.length);\n            var temp_path=temp_path.slice(0,random_index);\n            var temp=child.path[random_index];\n            var temp_visited={};\n            var keep_original=false;\n            var target_reacher=child.path[child.path.length-1][0]===target[0] && child.path[child.path.length-1][1]===target[1];\n            if(target_reacher){\n                var random_index_two_steps_from_target=random_index+2<child.path.length;\n                if(random_index_two_steps_from_target){\n                    random_index=getRndInteger(random_index+1,child.path.length);\n                }else{\n                    random_index=child.path.length-1;\n                }\n                var temp_target=child.path[random_index];\n            }else{\n                var temp_target=target;\n            }\n            temp_path.forEach(each=>{\n                temp_visited[(each[0]+1)+','+each[1]]=true;\n            });\n            while(temp[0]!=temp_target[0] || temp[1]!=temp_target[1]){\n                temp_path.push(temp);\n                var temp_neighbours=get_neighbours(temp[0],temp[1],temp_visited);\n                if(temp_neighbours.length===0){\n                    keep_original=true;\n                    break\n                };\n                var temp_next_index=getRndInteger(0,temp_neighbours.length);\n                var temp_next=temp_neighbours[temp_next_index];\n                temp=temp_next;\n            };\n            temp_path.push(temp);\n            if(target_reacher){\n                temp_path=temp_path.concat(child.path.slice(random_index,child.path.length))\n            };\n            if(keep_original){\n                temp_path=child.path;\n            };\n            var temp_child=new path(start, target)\n            temp_child.path=temp_path;\n            temp_child.fitness=get_fitness(temp_path,target)\n            return temp_child\n        };\n        return child;\n    };\n    var start=[x,y]\n    var population=document.getElementById(\"genetic_algo_population\").value;\n    var mutation_rate=document.getElementById(\"genetic_algo_mutation_rate\").value;\n    if(population==\"\" || mutation_rate==\"\"){alert('Enter population and mutation rate');return}\n    var current_generation=[];\n    for(var i=0;i<population;i++){\n        current_generation.push(new path(start,target));\n    };\n    var genetic_algorithm_interval=setInterval(() => {\n        if(document.getElementById(\"maze_control_varaible_continue_searching\").innerHTML==\"false\"){\n            clearInterval(genetic_algorithm_interval);\n            refresh();\n            return;\n        };\n        var total_fitness=0;\n        var max_fitness=0;\n        var max_fitness_index;\n        for(var i=0;i<current_generation.length;i++){\n            if(current_generation[i].fitness>max_fitness){\n                max_fitness=current_generation[i].fitness;\n                max_fitness_index=i;\n            };\n            total_fitness+=current_generation[i].fitness;\n        };\n        var max_fitness_path=current_generation[max_fitness_index].path;\n        current_generation.forEach(each=>{\n            each.prob=each.fitness/total_fitness;\n        });\n        if(max_fitness==Infinity){\n            genetic_algorithm(no_rows,no_columns);\n            return;\n        };\n        display(max_fitness_path);\n        var temp_generation=[]\n        for(var i=0;i<population;i++){\n            var parent1=get_parent_according_to_prob(current_generation);\n            var parent2=get_parent_according_to_prob(current_generation);\n            var temp=crossover2(parent1,parent2,start,target);\n            var temp=mutate(temp,mutation_rate,start,target);\n            temp_generation.push(temp);\n        };\n        current_generation=temp_generation;\n    },10)\n};","import '../css/maze_control.css'\nimport A_star from '../algorithms/A_star'\nimport BFS from '../algorithms/BFS'\nimport dijkstra from '../algorithms/dijskra'\nimport genetic_algorithm from '../algorithms/Genetic_algorithm'\nimport { useState,useEffect } from 'react';\n\n\n// Component: maze controls\n// include:\n//   chooses maze building tools\n//   maze generating algo\n//   all other controls\n\nfunction Maze_control(props){\n    // uses the windows width and height to find no_rows and no_columns\n    var no_rows=props.rows;\n    var no_columns=props.columns;\n    function choose_eraser(){\n        document.getElementById('eraser').checked = true;\n        document.getElementById('drawer').checked = false;\n        document.getElementById('start').checked = false;\n        document.getElementById('target').checked = false;\n    };\n    function choose_drawer(){\n        document.getElementById('eraser').checked = false;\n        document.getElementById('drawer').checked = true;\n        document.getElementById('start').checked = false;\n        document.getElementById('target').checked = false;\n    };\n    function choose_start(){\n        document.getElementById('start').checked = true;\n        document.getElementById('target').checked = false;\n        document.getElementById('eraser').checked = false;\n        document.getElementById('drawer').checked = false;\n    };\n    function choose_target(){\n        document.getElementById('start').checked = false;\n        document.getElementById('target').checked = true;\n        document.getElementById('eraser').checked = false;\n        document.getElementById('drawer').checked = false;\n    };\n    // gets random interger in [min,max)\n    function getRandomInt(min, max) {\n        if(min===max){return min}\n        var min = Math.ceil(min);\n        var max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n    //gives a random neighbour of a  grid for maze generating algo\n    function get_next(current,visited){\n        var neighbours=[];\n        var x=current[0]\n        var y=current[1]\n        visited[`${x},${y}`]=true;\n        //top neighbour\n        if(y>=3 && visited[`${x},${y-2}`]===undefined){\n            neighbours.push([x,(y-2)])\n        };\n        //right neighbour\n        if(x<=(no_columns-2) && visited[`${x+2},${y}`]===undefined){\n            neighbours.push([(x+2),y])\n        };\n        //bottom neighbour\n        if(y<=(no_rows-2) && visited[`${x},${y+2}`]===undefined){\n            neighbours.push([x,(y+2)])\n        };\n        //left neighbour\n        if(x>=3 && visited[`${x-2},${y}`]===undefined){\n            neighbours.push([(x-2),y])\n        };\n        var no_neighbours=neighbours.length;\n        if(no_neighbours===0){\n            return 0;\n        };\n        var result=neighbours[getRandomInt(1,no_neighbours)-1]\n        return result\n    };\n    // removes obstacle class from the target grid\n    function check_for_obstacle_in_target(){\n        var target=Array.from(document.getElementsByClassName(\"target\"))[0];\n        target.classList.remove(\"obstacle\");\n    }\n    // maze generating function\n    function maze_generator(e){\n        const grids=Array.from(document.getElementsByClassName('grid'));\n        refresh();\n        for(var i=0;i<grids.length;i++){\n            var y=Math.floor(i/no_columns)+1;\n            var x=(i%no_columns)+1;\n            if(x%2===0 || y%2===0){\n                grids[i].classList.add('obstacle');\n            };\n        };\n        var stack=[[1,1]];\n        var visited={}\n        var current=[1,1]\n        var intervarId=setInterval(()=>{\n            if(stack.length<=0){clearInterval(intervarId)}\n            var next=get_next(current,visited);\n            if(next===0){current=stack.pop();return};\n            var index=(((current[1]-1)*no_columns)+(current[0]-1))\n            //if current and next is in same row\n            if(current[1]===next[1]){\n                //left side\n                if(current[0]>next[0]){\n                        grids[index-1].classList.remove('obstacle');\n                }\n                //right side\n                else if(current[0]<next[0]){\n                    grids[index+1].classList.remove('obstacle');\n                };\n            }\n            //if current and next is in same column\n            else if(current[0]===next[0]){\n                //top\n                if(current[1]>next[1]){\n                    grids[index-no_columns].classList.remove('obstacle');\n                }\n                //bottom\n                else if(current[1]<next[1]){\n                    grids[index+no_columns].classList.remove('obstacle')\n                };\n            };\n            stack.push(next);\n            current=next;\n        },7.5);\n        check_for_obstacle_in_target();\n    };\n    // clears the maze for maze generation\n    function refresh(){\n        const grids=Array.from(document.getElementsByClassName('grid'));\n        grids.forEach(each=>{\n            if(each.classList.contains('obstacle')){\n                each.classList.remove('obstacle');\n            };\n            if(each.classList.contains('seen')){\n                each.classList.remove('seen');\n            };\n            if(each.classList.contains('path')){\n                each.classList.remove('path');\n            };\n        });\n    };\n    // stops any running algorithm and removes the path found\n    function stop_refresh(){\n        set_countinue_serching(continue_seaching==\"true\"?continue_seaching=\"false\":continue_seaching=\"true\");\n        const grids=Array.from(document.getElementsByClassName('grid'));\n        grids.forEach(each=>{\n            if(each.classList.contains('seen')){\n                each.classList.remove('seen');\n            };\n            if(each.classList.contains('path')){\n                each.classList.remove('path');\n            };\n            each.innerHTML=\"\";\n        });\n    };\n    var [continue_seaching,set_countinue_serching]=useState(\"false\");\n    // calls the algorithm choosen by the user\n    function find_path(){\n        stop_refresh();\n        set_countinue_serching(continue_seaching=\"true\");\n        var algo=document.getElementById('algorithm').value;\n        if(algo=='Genetic Algorithm'){genetic_algorithm(no_rows,no_columns);return}\n        if(algo=='A* algorithm'){A_star(no_rows,no_columns);return}\n        if(algo=='BFS'){BFS(no_rows,no_columns);return}\n        if(algo=='dijkstra'){dijkstra(no_rows,no_columns);return}\n    };\n    // shows more options when in mobile view\n    function show_more_options(){\n        var algo_choosing_div=document.querySelector(\".algo_choseing_div\");\n        var genetic_algo_options=document.querySelector(\".genetic_algo_options\");\n        var show_btn=document.querySelector('#show_btn');\n        if(show_btn.innerHTML==\"X\"){\n            algo_choosing_div.classList.remove(\"show_more_options1\");\n            genetic_algo_options.classList.remove(\"show_more_options2\");\n            show_btn.innerHTML=\"More\"\n        }\n        else{\n            algo_choosing_div.classList.add(\"show_more_options1\");\n            genetic_algo_options.classList.add(\"show_more_options2\");\n            show_btn.innerHTML=\"X\";\n        };\n        return\n    }\n    // adds population and mutation rate for genetic algorithm\n    useEffect(()=>{\n        document.getElementById(\"genetic_algo_population\").value=100;\n        document.getElementById(\"genetic_algo_mutation_rate\").value=10;\n    },[]);\n    return (\n        <div className=\"maze_control\">\n            <div class=\"maze_control_variables\">\n                <div id=\"maze_control_varaible_continue_searching\">{continue_seaching}</div>\n            </div>\n            <button class=\"show-btn\" onClick={()=>{show_more_options()}} id=\"show_btn\">More</button>\n            <button onClick={()=>stop_refresh()}> Stop </button><br></br>\n            <div className=\"algo_choseing_div\">\n                <h4 className=\"maze-building-title\">Algorithm:</h4>\n                <select id='algorithm'>\n                    <option value='A* algorithm'>A* algorithm</option>\n                    <option value='Genetic Algorithm'>Genetic Algorithm</option>\n                    <option value='BFS'>BFS</option>\n                    <option value='dijkstra'>dijkstra</option>\n                </select>\n            </div>\n            <br></br>\n            <div className=\"genetic_algo_options\">\n                <label for=\"genetic_algo_population\">Population: </label>\n                <input id=\"genetic_algo_population\" type=\"number\" min=\"10\"></input><br></br><br></br>\n                <label for=\"genetic_algo_mutation_rate\">Mutaion Rate: </label>\n                <input id=\"genetic_algo_mutation_rate\" type=\"number\" min=\"0\"></input><br></br>\n            </div>\n            <br></br>\n            <div className=\"algo-btns\">\n                <input type=\"checkbox\" id=\"start\" class=\"checkbox\" onClick={choose_start}></input>\n                <lable for=\"eraser\"> Start</lable><br></br>\n                <input type=\"checkbox\" id=\"target\" class=\"checkbox\" onClick={choose_target}></input>\n                <lable for=\"drawer\"> Target</lable><br></br>\n                <button id =\"find-path-btn\" onClick={()=>find_path()}>Find path</button>\n            </div>\n            <div className=\"maze_building_options\">\n                <h4 className=\"maze-building-title\">Maze building tools:</h4>\n                <input type=\"checkbox\" id=\"eraser\" class=\"checkbox\" onClick={choose_eraser}></input>\n                <lable for=\"eraser\"> Eraser</lable><br></br>\n                <input type=\"checkbox\" id=\"drawer\" class=\"checkbox\" onClick={choose_drawer}></input>\n                <lable for=\"drawer\"> Builder</lable><br></br>\n                <button class=\"btn generate-maze\" onClick={e=>maze_generator(e)}>Generate maze</button>\n            </div>\n        </div>\n    )\n};\n\nexport default Maze_control;\n\n","export default __webpack_public_path__ + \"static/media/choose_mutation_rate.c8a3b1e4.PNG\";","export default __webpack_public_path__ + \"static/media/choose_population.c845a480.PNG\";","import choose_mutation_rate from  \"../user mannual  images/choose_mutation_rate.PNG\"\nimport choose_population from  \"../user mannual  images/choose_population.PNG\"\nimport \"../css/user_manual.css\"\n//population and mutation rate control detail\n\nexport default function GA_options(){\n    return (\n        <div className=\"user_manual_container\">\n            <h3>Genetic Algorithm options</h3>\n            <ul className=\"texts\">\n                <li>If you choose Genetic Algorithms,you can customize by changing,</li>\n                <li>Mutation Rate.</li>\n                <li>Population.</li>\n            </ul>\n            <img src={choose_mutation_rate}></img>\n            <img src={choose_population}></img>\n        </div>\n    );\n};","export default __webpack_public_path__ + \"static/media/choose_builder.80a77480.PNG\";","export default __webpack_public_path__ + \"static/media/maze_build1.73137db3.PNG\";","export default __webpack_public_path__ + \"static/media/maze_build2.40d4d3e5.PNG\";","import choose_builder from  \"../user mannual  images/choose_builder.PNG\"\nimport  maze_build1 from \"../user mannual  images/maze_build1.PNG\"\nimport  maze_build2 from \"../user mannual  images/maze_build2.PNG\"\nimport \"../css/user_manual.css\"\n//maze buuilder selecting and building detail\n\nexport default function Maze_builder(){\n    return (\n        <div className=\"user_manual_container\">\n            <h3>Build Obstacles</h3>\n            <ul className=\"texts\">\n                <li>Select builder in options.</li>\n                <li>Then click on the grid to be a obstacle.</li>\n                <li>Then hover around to create more obstacle.</li>\n                <li>When done click again.</li>\n            </ul>\n            <img src={choose_builder}></img>\n            <img src={maze_build1}></img>\n            <img src={maze_build2}></img>\n        </div>\n    );\n};","export default __webpack_public_path__ + \"static/media/choose_eraser.b18c9e86.PNG\";","export default __webpack_public_path__ + \"static/media/earser1.d90e4a93.PNG\";","export default __webpack_public_path__ + \"static/media/earser2.dd046efe.PNG\";","export default __webpack_public_path__ + \"static/media/earser3.ed07814a.PNG\";","import choose_eraser from  \"../user mannual  images/choose_eraser.PNG\"\nimport  eraser1 from \"../user mannual  images/earser1.PNG\"\nimport  eraser2 from \"../user mannual  images/earser2.PNG\"\nimport  eraser3 from \"../user mannual  images/earser3.PNG\"\nimport \"../css/user_manual.css\"\n//maze eraser selection and erasing detail\n\nexport default function Maze_eraser(){\n    return (\n        <div className=\"user_manual_container\">\n            <h3>Erase Obstacles</h3>\n            <ul className=\"texts\">\n                <li>Select eraser in options.</li>\n                <li>Then click on the obstacle to erase.</li>\n                <li>Then hover around to erase more obstacle.</li>\n                <li>When done click again.</li>\n            </ul>\n            <img src={choose_eraser}></img>\n            <img src={eraser1}></img>\n            <img src={eraser2}></img>\n            <img src={eraser3}></img>\n        </div>\n    );\n};","export default __webpack_public_path__ + \"static/media/choose_generate_maze.91ed9f87.PNG\";","import choose_generate_maze from  \"../user mannual  images/choose_generate_maze.PNG\"\nimport \"../css/user_manual.css\"\n//maze generation detail\n\nexport default function Maze_generator(){\n    return (\n        <div className=\"user_manual_container\">\n            <h3>Auto Build Maze</h3>\n            <ul className=\"texts\">\n                <li>Click on the generate maze button to automatically built a maze.</li>\n            </ul>\n            <img src={choose_generate_maze}></img>\n        </div>\n    );\n};","export default __webpack_public_path__ + \"static/media/choose_more.f2e91dd2.PNG\";","export default __webpack_public_path__ + \"static/media/options_open.f38d917b.PNG\";","import choose_more from  \"../user mannual  images/mobile/choose_more.PNG\"\nimport optioons_open from  \"../user mannual  images/mobile/options_open.PNG\"\nimport \"../css/user_manual.css\"\n//more options detail\n\nexport default function More_options(){\n    return (\n        <div className=\"user_manual_container\">\n            <h3>More Options</h3>\n            <ul className=\"texts\">\n                <li>Click on More see more options.</li>\n                <li>Click on X close more options.</li>\n            </ul>\n            <img src={choose_more}></img>\n            <img src={optioons_open}></img>\n        </div>\n    );\n};","export default __webpack_public_path__ + \"static/media/choose_algorithm.7b3f273f.PNG\";","import choose_algorithm from  \"../user mannual  images/choose_algorithm.PNG\"\nimport \"../css/user_manual.css\"\n//algorithm selection detail\n\nexport default function Select_algorithm(){\n    return (\n        <div className=\"user_manual_container\">\n            <h3>Select Algorithm</h3>\n            <ul className=\"texts\">\n                <li>Click on algorithm dropdown menu and choose an algorithm.</li>\n            </ul>\n            <img src={choose_algorithm}></img>\n        </div>\n    );\n};","export default __webpack_public_path__ + \"static/media/choose_start.5df7c9a1.PNG\";","export default __webpack_public_path__ + \"static/media/build_start.c35b280f.PNG\";","import choose_start from  \"../user mannual  images/choose_start.PNG\"\nimport  build_start from \"../user mannual  images/build_start.PNG\"\nimport \"../css/user_manual.css\"\n//start selecting detail\n\nexport default function Select_start(){\n    return (\n        <div className=\"user_manual_container\">\n            <h3>Choose Start grid</h3>\n            <ul className=\"texts\">\n                <li>Select start in options.</li>\n                <li>Then choose the grid to be the start of the path.</li>\n            </ul>\n            <img src={choose_start}></img><br></br>\n            <img src={build_start}></img>\n        </div>\n    );\n};","export default __webpack_public_path__ + \"static/media/Choose_target.2e689546.PNG\";","export default __webpack_public_path__ + \"static/media/build_target.0b2eb82d.PNG\";","import choose_target from  \"../user mannual  images/Choose_target.PNG\"\nimport  build_target from \"../user mannual  images/build_target.PNG\"\nimport \"../css/user_manual.css\"\n//target selecting detail\n\nexport default function Select_target(){\n    return (\n        <div className=\"user_manual_container\">\n            <h3>Choose Target grid</h3>\n            <ul className=\"texts\">\n                <li>Select target in options.</li>\n                <li>Then choose the grid to be the target of the path.</li>\n            </ul>\n            <img src={choose_target}></img><br></br>\n            <img src={build_target}></img>\n        </div>\n    );\n};","export default __webpack_public_path__ + \"static/media/choose_stop.41564fe5.PNG\";","import choose_start from  \"../user mannual  images/choose_start.PNG\"\nimport choose_stop from  \"../user mannual  images/choose_stop.PNG\"\nimport \"../css/user_manual.css\"\n//details on starting and stoping algorithm\n\nexport default function Start_stop_algo(){\n    return (\n        <div className=\"user_manual_container\">\n            <h3>Start and Stop the algorithm.</h3>\n            <ul className=\"texts\">\n                <li>Click on Find Path to run algorithm.</li>\n                <li>Click on Stop to stop algorithm.</li>\n                <li>***Always Stop the algorithm before starting another algorithm.***</li>\n            </ul>\n            <img src={choose_start}></img>\n            <img src={choose_stop}></img>\n        </div>\n    );\n};","import GA_options from \"../user_manual_components/GA_options.js\"\nimport Maze_builder from \"../user_manual_components/maze_builder.js\"\nimport Maze_eraser from \"../user_manual_components/maze_eraser.js\"\nimport Maze_generator from \"../user_manual_components/maze_generator.js\"\nimport More_options from \"../user_manual_components/more_options.js\"\nimport Select_algorithm from \"../user_manual_components/select_algorithm.js\"\nimport Select_start from \"../user_manual_components/select_start.js\"\nimport Select_target from \"../user_manual_components/select_target.js\"\nimport Start_stop_algo from \"../user_manual_components/start_stop_algo.js\"\nimport '../css/user_manual.css'\n\n/*\n    component containing user manual\n */\n\nexport default function User_manual(){\n    function show_mobile_manual(){\n        if(window.innerWidth<=720){\n            return <div className=\"no_show\"><More_options id=\"manual_6\" /></div>;\n        }\n        else{\n            return;\n        }\n    }\n    function next_clicked(){\n        var all_manuals=document.getElementsByClassName(\"all_manuals\")[0].children;\n        var to_show_index;\n        for(var i=0;i<all_manuals.length;i++){\n            if(all_manuals[i].classList.contains(\"show\")){\n                to_show_index=i+1;\n                all_manuals[i].classList.remove(\"show\");\n            };\n        };\n        if(to_show_index>all_manuals.length-1){skip();return;}\n        all_manuals[to_show_index].classList.add(\"show\");\n    };\n    function prev_clicked(){\n        var all_manuals=document.getElementsByClassName(\"all_manuals\")[0].children;\n        var to_show_index;\n        for(var i=0;i<all_manuals.length;i++){\n            if(all_manuals[i].classList.contains(\"show\")){\n                to_show_index=i-1;\n                all_manuals[i].classList.remove(\"show\");\n            };\n        };\n        if(to_show_index<0){to_show_index=0};\n        all_manuals[to_show_index].classList.add(\"show\");\n    };\n    function skip(){\n        document.getElementsByClassName(\"user_manual_main_container\")[0].classList.add(\"no_show\");\n    }\n    return (\n        <div className=\"user_manual_main_container\">\n            <button className=\"button prev\" onClick={prev_clicked}>Prev</button>\n            <button className=\"button next\" onClick={next_clicked}>Next</button>\n                <div className=\"all_manuals\">\n                    <div className=\"no_show show\"><Select_start id=\"manual_1\" /></div>\n                    <div className=\"no_show\"><Select_target id=\"manual_2\" /></div>\n                    <div className=\"no_show\"><Maze_builder id=\"manual_3\" /></div>\n                    <div className=\"no_show\"><Maze_eraser id=\"manual_4\" /></div>\n                    <div className=\"no_show\"><Maze_generator id=\"manual_5\" /></div>\n                    {show_mobile_manual()}\n                    <div className=\"no_show\"><Select_algorithm id=\"manual_7\" /></div>\n                    <div className=\"no_show\"><GA_options id=\"manual_8\" /></div>\n                    <div className=\"no_show\"><Start_stop_algo id=\"manual_9\" /></div>\n                </div>\n            <button className=\"button skip\" onClick={skip}>Skip</button>\n        </div>\n    );\n};","import Maze from './components/maze.js'\nimport Maze_control from './components/maze_controls.js'\nimport User_Mannual from './components/user_manual.js'\nimport './css/index.css'\n\nfunction App() {\n    var maze_width=window.innerWidth-25;\n    var maze_height=(0.8*window.innerHeight)-25;\n    var no_rows=Math.floor(maze_height/(25+(2*0.01)));\n    var no_columns=Math.floor(maze_width/(25+(2*0.01)));\n    document.title=\"Path algo visualizer\";\n    return (\n        <div className=\"App\">\n          <Maze_control rows={no_rows} columns={no_columns} />\n          <Maze width={maze_width} height={maze_height} rows={no_rows} columns={no_columns} />\n          <User_Mannual />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}